{"ast":null,"code":"import React, { useState } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nconst useAxios = (url, name) => {\n  const [items, setItems] = useState([]);\n\n  function filler(name) {\n    let fullUrl = name ? `${url}${name}` : url;\n    return fullUrl;\n  }\n\n  const addItem = async () => {\n    filler();\n    const response = await axios.get(fill); // const response = await axios.get(`${url}${extra}`)\n\n    setItems(items => [...items, { ...response.data,\n      id: uuid()\n    }]);\n  };\n\n  const clearItems = () => setItems([]);\n\n  return [items, addItem, clearItems];\n};\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/alonrgeffner/Documents/test 1/HW Projects/react-cards-pokemon/src/hooks/useAxios.js"],"names":["React","useState","v4","uuid","axios","useAxios","url","name","items","setItems","filler","fullUrl","addItem","response","get","fill","data","id","clearItems"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASS,MAAT,CAAgBH,IAAhB,EAAsB;AACtB,QAAII,OAAO,GAAIJ,IAAD,GAAU,GAAED,GAAI,GAAEC,IAAK,EAAvB,GAA2BD,GAAzC;AACA,WAAOK,OAAP;AACC;;AACD,QAAMC,OAAO,GAAG,YAAY;AAC5BF,IAAAA,MAAM;AACN,UAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUC,IAAV,CAAvB,CAF4B,CAG5B;;AACAN,IAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGK,QAAQ,CAACG,IAAd;AAAoBC,MAAAA,EAAE,EAAEd,IAAI;AAA5B,KAAX,CAAV,CAAR;AACC,GALD;;AAMA,QAAMe,UAAU,GAAG,MAAMT,QAAQ,CAAC,EAAD,CAAjC;;AACA,SAAO,CAACD,KAAD,EAAQI,OAAR,EAAiBM,UAAjB,CAAP;AACH,CAfD;;AAiBA,eAAeb,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {v4 as uuid} from \"uuid\";\nimport axios from \"axios\";\n\nconst useAxios = (url, name) => {\n    const [items, setItems] = useState([]);\n\n    function filler(name) {\n    let fullUrl = (name) ? `${url}${name}` : url;\n    return fullUrl\n    }\n    const addItem = async () => {\n    filler();\n    const response = await axios.get(fill)\n    // const response = await axios.get(`${url}${extra}`)\n    setItems(items => [...items, { ...response.data, id: uuid() }]);\n    }\n    const clearItems = () => setItems([]);\n    return [items, addItem, clearItems]\n}\n\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}