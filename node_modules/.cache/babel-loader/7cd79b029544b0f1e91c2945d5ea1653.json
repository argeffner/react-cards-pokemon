{"ast":null,"code":"import React, { useState } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nconst useAxios = (url, name) => {\n  const [items, setItems] = useState([]); // let fullUrl = (name) ? `${url}${name}` : url;\n  // let extra = (name) ? name : \"\";\n\n  const addItem = async (name = \"\") => {\n    let res;\n\n    if (name) {} // let response = (name) ? res = await axios.get(`${url}${name}`) : ''\n    // let response = (!name) ? res = await axios.get(`${url}`) : ''\n\n\n    setItems(items => [...items, { ...response.data,\n      id: uuid()\n    }]);\n  };\n\n  const clearItems = () => setItems([]);\n\n  return [items, addItem, clearItems];\n};\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/alonrgeffner/Documents/test 1/HW Projects/react-cards-pokemon/src/hooks/useAxios.js"],"names":["React","useState","v4","uuid","axios","useAxios","url","name","items","setItems","addItem","res","response","data","id","clearItems"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAD4B,CAE5B;AACA;;AAEA,QAAMS,OAAO,GAAG,OAAOH,IAAI,GAAG,EAAd,KAAqB;AACrC,QAAII,GAAJ;;AACA,QAAIJ,IAAJ,EAAU,CAET,CAJoC,CAKrC;AACA;;;AACAE,IAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGI,QAAQ,CAACC,IAAd;AAAoBC,MAAAA,EAAE,EAAEX,IAAI;AAA5B,KAAX,CAAV,CAAR;AACC,GARD;;AASA,QAAMY,UAAU,GAAG,MAAMN,QAAQ,CAAC,EAAD,CAAjC;;AACA,SAAO,CAACD,KAAD,EAAQE,OAAR,EAAiBK,UAAjB,CAAP;AACH,CAhBD;;AAkBA,eAAeV,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {v4 as uuid} from \"uuid\";\nimport axios from \"axios\";\n\nconst useAxios = (url, name) => {\n    const [items, setItems] = useState([]);\n    // let fullUrl = (name) ? `${url}${name}` : url;\n    // let extra = (name) ? name : \"\";\n    \n    const addItem = async (name = \"\") => {\n    let res;\n    if (name) {\n        \n    }\n    // let response = (name) ? res = await axios.get(`${url}${name}`) : ''\n    // let response = (!name) ? res = await axios.get(`${url}`) : ''\n    setItems(items => [...items, { ...response.data, id: uuid() }]);\n    }\n    const clearItems = () => setItems([]);\n    return [items, addItem, clearItems]\n}\n\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}