{"ast":null,"code":"import React, { useState } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nconst useAxios1 = url => {\n  const [items, setItems] = useState([]);\n\n  const addItem = async () => {\n    const response = await axios.get(url);\n    setItems(items => [...items, { ...response.data,\n      id: uuid()\n    }]);\n  };\n\n  const clearItems = () => setItems([]);\n\n  return [items, addItem, clearItems];\n};\n\nconst useAxios2 = (url, name) => {\n  const [items, setItems] = useState([]);\n\n  const addItem = async () => {\n    const response = await axios.get(`${url}${name}`);\n    setItems(items => [...items, { ...response.data,\n      id: uuid()\n    }]);\n  };\n\n  const clearItems = () => setItems([]);\n\n  return [items, addItem, clearItems];\n}; // const useAxios = (url, name) => {\n//     const [items, setItems] = useState([]);\n//     // let fullUrl = (name) ? `${url}${name}` : url;\n//     // let extra = (name) ? name : \"\";\n//     const addItem = async (name = \"\") => {\n//     let response;\n//     if (name) {\n//       response = await axios.get(`${url}${name}`) \n//       setItems(items => [...items, { ...response.data, id: uuid() }]);\n//     }\n//     if (!name) {\n//       response = await axios.get(url) \n//       setItems(items => [...items, { ...response.data, id: uuid() }]);\n//       }\n//     // const response = await axios.get(`${url}${name}`)\n//     // setItems(items => [...items, { ...response.data, id: uuid() }]);\n//     }\n//     const clearItems = () => setItems([]);\n//     return [items, addItem, clearItems]\n// }\n// export default useAxios;\n\n\nexport { useAxios1, useAxios2 };","map":{"version":3,"sources":["/Users/alonrgeffner/Documents/test 1/HW Projects/react-cards-pokemon/src/hooks/useAxios.js"],"names":["React","useState","v4","uuid","axios","useAxios1","url","items","setItems","addItem","response","get","data","id","clearItems","useAxios2","name"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUL,GAAV,CAAvB;AACAE,IAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGG,QAAQ,CAACE,IAAd;AAAoBC,MAAAA,EAAE,EAAEV,IAAI;AAA5B,KAAX,CAAV,CAAR;AACC,GAHH;;AAIA,QAAMW,UAAU,GAAG,MAAMN,QAAQ,CAAC,EAAD,CAAjC;;AACA,SAAO,CAACD,KAAD,EAAQE,OAAR,EAAiBK,UAAjB,CAAP;AACH,CARD;;AASA,MAAMC,SAAS,GAAG,CAACT,GAAD,EAAMU,IAAN,KAAe;AAC7B,QAAM,CAACT,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,GAAI,GAAEU,IAAK,EAAxB,CAAvB;AACAR,IAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGG,QAAQ,CAACE,IAAd;AAAoBC,MAAAA,EAAE,EAAEV,IAAI;AAA5B,KAAX,CAAV,CAAR;AACC,GAHH;;AAIA,QAAMW,UAAU,GAAG,MAAMN,QAAQ,CAAC,EAAD,CAAjC;;AACA,SAAO,CAACD,KAAD,EAAQE,OAAR,EAAiBK,UAAjB,CAAP;AACH,CARD,C,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAQT,SAAR,EAAmBU,SAAnB","sourcesContent":["import React, {useState} from 'react';\nimport {v4 as uuid} from \"uuid\";\nimport axios from \"axios\";\n\n\nconst useAxios1 = (url) => {\n    const [items, setItems] = useState([]);\n    const addItem = async () => {\n      const response = await axios.get(url) \n      setItems(items => [...items, { ...response.data, id: uuid() }]);\n      }\n    const clearItems = () => setItems([]);\n    return [items, addItem, clearItems]\n}\nconst useAxios2 = (url, name) => {\n    const [items, setItems] = useState([]);\n    const addItem = async () => {\n      const response = await axios.get(`${url}${name}`) \n      setItems(items => [...items, { ...response.data, id: uuid() }]);\n      }\n    const clearItems = () => setItems([]);\n    return [items, addItem, clearItems]\n}\n\n// const useAxios = (url, name) => {\n//     const [items, setItems] = useState([]);\n//     // let fullUrl = (name) ? `${url}${name}` : url;\n//     // let extra = (name) ? name : \"\";\n    \n//     const addItem = async (name = \"\") => {\n//     let response;\n//     if (name) {\n//       response = await axios.get(`${url}${name}`) \n//       setItems(items => [...items, { ...response.data, id: uuid() }]);\n//     }\n//     if (!name) {\n//       response = await axios.get(url) \n//       setItems(items => [...items, { ...response.data, id: uuid() }]);\n//       }\n//     // const response = await axios.get(`${url}${name}`)\n//     // setItems(items => [...items, { ...response.data, id: uuid() }]);\n//     }\n//     const clearItems = () => setItems([]);\n//     return [items, addItem, clearItems]\n// }\n// export default useAxios;\n\nexport {useAxios1, useAxios2};"]},"metadata":{},"sourceType":"module"}